schema {
  query: RootQuery
  mutation: RootMutation
}

""""""
type Account {
  """"""
  createdAt: MongoDateTime

  """"""
  email: String

  """"""
  id: ObjectID

  """"""
  identifier: String!

  """"""
  updatedAt: MongoDateTime

  """"""
  walletCount: Int
}

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

""""""
type Device {
  """"""
  appVersion: String

  """"""
  brand: String

  """"""
  carrier: String

  """"""
  createdAt: String

  """"""
  deviceId: String

  """"""
  deviceName: String

  """"""
  deviceType: String

  """"""
  id: ObjectID

  """"""
  lastUpdateTime: String

  """"""
  manufacturer: String

  """"""
  notificationToken: String

  """"""
  platform: String

  """"""
  systemVersion: String

  """"""
  updatedAt: String

  """"""
  userIdentifier: String
}

""""""
input DeviceInfoInput {
  """"""
  appVersion: String

  """"""
  brand: String

  """"""
  carrier: String

  """"""
  deviceId: String!

  """"""
  deviceName: String

  """"""
  deviceType: String

  """"""
  lastUpdateTime: String

  """"""
  manufacturer: String

  """"""
  notificationToken: String

  """"""
  platform: String

  """"""
  systemVersion: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)
"""
scalar JSON

""""""
type JoinWaitlistResult {
  """"""
  count: Int

  """"""
  description: String

  """"""
  email: String

  """"""
  twitter: String
}

"""MongoDB DateTime"""
scalar MongoDateTime

""""""
type Nonce {
  """"""
  identifier: String!

  """"""
  timestamp: MongoDateTime!

  """"""
  type: NonceType!

  """"""
  value: Uint32!
}

""""""
enum NonceType {
  """"""
  Login
}

"""MongoDB ObjectID"""
scalar ObjectID

""""""
type RootMutation {
  """"""
  addWidget(banner: String, description: String!, largeLogo: String, logo: String, name: String!, networks: [String] = ["[]"], nfts: [WidgetTokenInput], ownerId: String!, tokens: [WidgetTokenInput]): Widget

  """"""
  claimWalletInvitation(code: String!, email: String!): Boolean

  """"""
  deleteWidget(id: String!): Boolean

  """"""
  deleteWidgetAccount(id: String!): Boolean

  """"""
  joinWaitlist(description: String!, email: String!, twitter: String!): JoinWaitlistResult

  """"""
  registerAccount(key: String!): Account

  """"""
  registerDevice(device: DeviceInfoInput!): Device

  """"""
  registerWidgetAccount(email: String, pubkey: String!): Account

  """"""
  sendEmergencyKit(key: String!): SendEmergencyKitResult

  """"""
  trackAccountWallets(wallets: [TrackAccountWalletInput]!): Int

  """"""
  updateWidgetAccountRole(id: String!, role: WidgetAccountRole!): WidgetAccount

  """"""
  updateWidgetOwner(id: String!, ownerId: String!): Widget

  """"""
  updateWidgetStatus(id: String!, status: WidgetStatus!, updaterPubkey: String!): Widget

  """"""
  verifyWidgetAccount(pubkey: String!, signature: String!): WidgetAccount
}

""""""
type RootQuery {
  """"""
  counter: Int

  """"""
  greeting: String

  """"""
  loginMessage(pubkey: String!): String

  """"""
  nonce(identifier: String!): Nonce

  """"""
  systemInfo: SystemInfo

  """"""
  token(id: String!): TokenInfo

  """"""
  tokenByAddress(address: String!): TokenInfo

  """"""
  tokens(ids: [String]!): [TokenInfo]

  """"""
  tokensByAddress(addresses: [String]!): [TokenInfo]

  """"""
  userAccount: Account

  """"""
  walletInvitation(code: String, email: String): WalletInvitation

  """"""
  widget(id: String!): Widget

  """"""
  widgetAccounts: [WidgetAccount]

  """"""
  widgets: [Widget]

  """"""
  widgetsByPubkey(pubkey: String!): [Widget]

  """"""
  widgetsByStatus(status: WidgetStatus!): [Widget]
}

""""""
type SendEmergencyKitResult {
  """"""
  messageId: String
}

""""""
type SystemInfo {
  """"""
  environment: String

  """"""
  version: String
}

""""""
type Token {
  """"""
  address: String!

  """"""
  id: String
}

""""""
type TokenInfo {
  """"""
  address: String

  """"""
  id: String!

  """"""
  name: String!

  """"""
  platforms: JSON!

  """"""
  quotes: JSON!

  """"""
  symbol: String!

  """"""
  timestamp: DateTime!
}

""""""
input TrackAccountWalletInput {
  """"""
  address: String!

  """"""
  network: String
}

"""The `Uint32` scalar type represents a 32-bit unsigned integer."""
scalar Uint32

""""""
type WalletInvitation {
  """"""
  code: String

  """"""
  email: String

  """"""
  id: ObjectID

  """"""
  timestamp: MongoDateTime
}

""""""
type Widget {
  """"""
  banner: String

  """"""
  description: String

  """"""
  id: ObjectID

  """"""
  largeLogo: String

  """"""
  logo: String

  """"""
  name: String

  """"""
  networks: [String]

  """"""
  nfts: [Token]

  """"""
  ownerId: ObjectID

  """"""
  status: WidgetStatus

  """"""
  tokens: [Token]
}

""""""
type WidgetAccount {
  """"""
  createdAt: MongoDateTime

  """"""
  email: String

  """"""
  id: ObjectID

  """"""
  identifier: String!

  """"""
  role: WidgetAccountRole

  """"""
  updatedAt: MongoDateTime
}

""""""
enum WidgetAccountRole {
  """"""
  ADMIN

  """"""
  USER
}

""""""
enum WidgetStatus {
  """"""
  ACCEPTED

  """"""
  IN_REVIEW

  """"""
  REJECTED
}

""""""
input WidgetTokenInput {
  """"""
  address: String!

  """"""
  id: String
}