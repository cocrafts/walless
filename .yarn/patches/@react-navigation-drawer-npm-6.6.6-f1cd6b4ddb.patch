diff --git a/lib/commonjs/views/modern/Drawer.js b/lib/commonjs/views/modern/Drawer.js
index a08b2d02c82a9f83d87b31754822f953cbd31802..3172c9711b75bcdeca2011571c50943776c1566b 100644
--- a/lib/commonjs/views/modern/Drawer.js
+++ b/lib/commonjs/views/modern/Drawer.js
@@ -229,7 +229,7 @@ function Drawer(_ref) {
         (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)
       }]
     };
-  });
+  }, [translateX, drawerType, drawerWidth, dimensions.width, drawerPosition, isRTL]);
   const contentAnimatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(() => {
     return {
       transform: drawerType === 'permanent' ?
@@ -241,7 +241,7 @@ function Drawer(_ref) {
         drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)
       }]
     };
-  });
+  }, [translateX, drawerType, drawerWidth, drawerPosition]);
   const progress = (0, _reactNativeReanimated.useDerivedValue)(() => {
     return drawerType === 'permanent' ? 1 : (0, _reactNativeReanimated.interpolate)(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);
   });
diff --git a/lib/commonjs/views/modern/Overlay.js b/lib/commonjs/views/modern/Overlay.js
index 662cc7704d4aa1a7d22564895be847d99f4c4731..ec07c24316ec38ecf7e8c521ecb8782115d1ff46 100644
--- a/lib/commonjs/views/modern/Overlay.js
+++ b/lib/commonjs/views/modern/Overlay.js
@@ -26,7 +26,7 @@ const Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {
       // We can send the overlay behind the screen to avoid it
       zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1
     };
-  });
+  }, [PROGRESS_EPSILON, progress]);
   const animatedProps = (0, _reactNativeReanimated.useAnimatedProps)(() => {
     const active = progress.value > PROGRESS_EPSILON;
     return {
@@ -34,7 +34,7 @@ const Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {
       accessibilityElementsHidden: !active,
       importantForAccessibility: active ? 'auto' : 'no-hide-descendants'
     };
-  });
+  }, [PROGRESS_EPSILON, progress]);
   return /*#__PURE__*/React.createElement(_reactNativeReanimated.default.View, _extends({}, props, {
     ref: ref,
     style: [styles.overlay, overlayStyle, animatedStyle, style],
